name: Send Email Notification

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Project description'
        required: true
      environment:
        description: 'Environment (dev/qa/demo/uat/prod)'
        choice:
        type: choice
        options:
            - dev
            - qa
            - demo
            - uat
            - prod
        required: true 
      version:
        description: 'Artifactory Release version'
        required: true
      tag:
        description: 'Github Tag'
        required: true
      task:
        description: 'Defects/Stories released'
        required: true  
      db:
        description: 'Updated DB script'
        choice:
        type: choice
        options:
            - Yes
            - No
        required: true 
jobs:
  send_email:
    runs-on: ubuntu-latest
    environment: DEV
    env:
      ENV: testENV     
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Get artifact Id from pom.xml
        run: echo "MAVEN_ARTIFACTID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV  
      - name: Echo Environment Variables
        run: |
           echo "EMAIL_TO: ${{ vars.EMAIL_TO }}"
           echo "service: ${{ inputs.service }}"
           echo "env: ${{ inputs.environment }}"
           echo "release: ${{ inputs.release }}"
           echo "tag: ${{ inputs.tag }}"
           echo "task: ${{ inputs.task }}"
           echo "db: ${{ inputs.db }}"
      - name: Send Email Notification
        run: |
            curl --location 'https://api.courier.com/send' \
            --header 'Authorization: Bearer pk_test_VR9ADX72AYMN7DQMBBR30P4QBJEX' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "message": {
                    "to": {
                        "email": "${{ vars.EMAIL_TO }}"
                    },
                    "template": "PTNT0D2WHE4MGFKBNTVPTRSBG3R7",
                    "data": {
                        "service": "${{ inputs.service }}",
                        "env": "${{ inputs.environment }}",
                        "release": "${{ inputs.version }}",
                        "tag": "${{ inputs.tag }}",
                        "task": "${{ inputs.task }}",
                        "db": "${{ inputs.db }}"
                    }
                }
            }'
